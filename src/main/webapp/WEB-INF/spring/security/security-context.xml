<!-- <?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	
	정적 리소스 파일들에는 보안 설정하지 않음
	<http pattern="/include/**" security="none"></http>
	
	<http auto-config="true" use-expressions="true" create-session="never">
	
		관리자 영역 설정
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		
		권한에 관계없이 접속 가능한 영역(비회원도 접속 가능)
		<intercept-url pattern="/user/**" access="permitAll"/>
		
		로그인한 사용자 영역
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_TEST','ROLE_ADMIN','ROLE_GUEST')"/>
		
		로그인 폼
		<form-login login-page="/join"
					login-processing-url="/join/joinProcess"
					authentication-success-handler-ref="successHandler"
					authentication-failure-handler-ref="failureHandler"
					username-parameter="memId" password-parameter="memPassword"
					/>
		<session-management>
			max-session = "1" -> 동시 접속 막음,
				 세션 만료시 "/" 로 이동하게 됨	
			
			<concurrency-control max-sessions="1"
								 expired-url="/"
								 error-if-maximum-exceeded="true"
								 />
		</session-management>
		
		접근권한 없는 경우 코드
		<access-denied-handler ref="deniedHandler"/>
	</http>
	
	<beans:bean id="deniedHandler" class="com.group6.shopping.security.service.DeniedHandler"></beans:bean>
	<beans:bean id="successHandler" class="com.group6.shopping.security.service.SuccessHandler"></beans:bean>
	<beans:bean id="failureHandler" class="com.group6.shopping.security.service.FailureHandler"></beans:bean>
	
	로그인 인증을 처리하는 빈
	<beans:bean id="userService" class="com.group6.shopping.members.dao">
		<beans:constructor-arg name="sqlSession" ref="sqlSession"></beans:constructor-arg>
	</beans:bean>
	비밀번호 암호화를 위한 빈
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
</beans:beans> -->